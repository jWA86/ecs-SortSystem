{"version":3,"sources":["../src/bundler/resolve/resolver.ts"],"names":[],"mappings":"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","file":"../../../../../../../../../dist/bundler/resolve/resolver.js","sourcesContent":["import * as async from \"async\";\nimport * as browserResolve from \"browser-resolve\";\nimport * as fs from \"fs\";\nimport * as os from \"os\";\nimport * as path from \"path\";\n\nimport { Logger } from \"log4js\";\n\nimport { Configuration } from \"../../shared/configuration\";\nimport { BundleItem } from \"../bundle-item\";\nimport { DependencyWalker } from \"../dependency-walker\";\nimport { SourceReader } from \"./source-reader\";\n\nexport class Resolver {\n\n    private shims: any;\n    private bowerPackages: { [key: string]: string; } = {};\n    private filenameCache: string[] = [];\n    private lookupNameCache: { [key: string]: string; } = {};\n\n    constructor(private config: Configuration,\n                private dependencyWalker: DependencyWalker,\n                private log: Logger,\n                private sourceReader: SourceReader) { }\n\n    public initialize() {\n        this.shims = this.config.bundlerOptions.addNodeGlobals ?\n            require(\"./shims\") : undefined;\n        this.log.debug(this.shims);\n        this.cacheBowerPackages();\n    }\n\n    public resolveModule(requiringModule: string,\n                         bundleItem: BundleItem,\n                         buffer: BundleItem[],\n                         onModuleResolved: { (bundleItem: BundleItem): void }) {\n\n        if (bundleItem.isTypescriptFile()) {\n            process.nextTick(() => {\n                onModuleResolved(bundleItem);\n            });\n            return;\n        }\n\n        if (bundleItem.isTypingsFile() && !bundleItem.isNpmModule()) {\n            this.tryResolveTypingAsJavascript(bundleItem, onModuleResolved);\n            return;\n        }\n\n        bundleItem.lookupName = bundleItem.isNpmModule() ?\n                bundleItem.moduleName :\n                path.join(path.dirname(requiringModule), bundleItem.moduleName);\n\n        if (this.lookupNameCache[bundleItem.lookupName]) {\n            bundleItem.filename = this.lookupNameCache[bundleItem.lookupName];\n            process.nextTick(() => {\n                onModuleResolved(bundleItem);\n            });\n            return;\n        }\n\n        if (this.config.bundlerOptions.exclude.indexOf(bundleItem.moduleName) !== -1) {\n            this.log.debug(\"Excluding module %s from %s\", bundleItem.moduleName, requiringModule);\n            process.nextTick(() => {\n                onModuleResolved(bundleItem);\n            });\n            return;\n        }\n\n        let onFilenameResolved = () => {\n\n            this.lookupNameCache[bundleItem.lookupName] = bundleItem.filename;\n\n            if (this.isInFilenameCache(bundleItem) || bundleItem.isTypescriptFile()) {\n                process.nextTick(() => {\n                    onModuleResolved(bundleItem);\n                });\n            }\n            else {\n                this.filenameCache.push(bundleItem.filename);\n                this.sourceReader.read(bundleItem, () => {\n                    this.resolveDependencies(bundleItem, buffer, onDependenciesResolved);\n                });\n            }\n        };\n\n        let onDependenciesResolved = () => {\n            buffer.push(bundleItem);\n            return onModuleResolved(bundleItem);\n        };\n\n        this.resolveFilename(requiringModule, bundleItem, onFilenameResolved);\n    }\n\n    private tryResolveTypingAsJavascript(bundleItem: BundleItem,\n                                         onModuleResolved: { (bundleItem: BundleItem): void }): void {\n        let jsfile = bundleItem.filename.replace(/.d.ts$/i, \".js\");\n        fs.stat(jsfile, (error: Error, stats: fs.Stats) => {\n            if (!error && stats) {\n                this.log.debug(\"Resolving %s to %s\", bundleItem.filename, jsfile);\n                bundleItem.filename = jsfile;\n            }\n            onModuleResolved(bundleItem);\n        });\n    }\n\n    private cacheBowerPackages(): void {\n        try {\n            let bower = require(\"bower\");\n            bower.commands\n                .list({ map: true }, { offline: true })\n                .on(\"end\", (map: any) => {\n\n                    Object.keys(map.dependencies).forEach((moduleName) => {\n\n                        let pkg = map.dependencies[moduleName];\n                        let files = [\"index.js\", moduleName + \".js\"];\n\n                        if (pkg.pkgMeta && pkg.pkgMeta.main) {\n                            if (Array.isArray(pkg.pkgMeta.main)) {\n                                pkg.pkgMeta.main.forEach((file: any) => {\n                                    files.push(file);\n                                });\n                            }\n                            else {\n                                files.push(pkg.pkgMeta.main);\n                            }\n                        }\n\n                        files.forEach((file) => {\n                            try {\n                                let main = path.join(pkg.canonicalDir, file);\n                                fs.statSync(main);\n                                this.bowerPackages[moduleName] = main;\n                            }\n                            catch (error) {\n                                // noop\n                            }\n                        });\n                    });\n                    this.log.debug(\"Cached bower packages: %s %s\", os.EOL, JSON.stringify(this.bowerPackages, null, 2));\n                });\n        }\n        catch (error) {\n            this.log.debug(\"No bower detected, skipping\");\n        }\n    }\n\n    private isInFilenameCache(bundleItem: BundleItem): boolean {\n        return this.filenameCache.indexOf(bundleItem.filename) !== -1;\n    }\n\n    private resolveFilename(requiringModule: string, bundleItem: BundleItem, onFilenameResolved: { (): void }) {\n\n        if (this.bowerPackages[bundleItem.moduleName]) {\n            bundleItem.filename = this.bowerPackages[bundleItem.moduleName];\n            this.log.debug(\"Resolved [%s] to bower package: %s\", bundleItem.moduleName, bundleItem.filename);\n            return onFilenameResolved();\n        }\n\n        if (this.config.bundlerOptions.resolve.alias[bundleItem.moduleName]) {\n            let alias = this.config.bundlerOptions.resolve.alias[bundleItem.moduleName];\n            let relativePath = path.relative(this.config.karma.basePath, alias);\n            bundleItem.filename = path.join(this.config.karma.basePath, relativePath);\n            this.log.debug(\"Resolved [%s] to alias: %s\", bundleItem.moduleName, bundleItem.filename);\n            return onFilenameResolved();\n        }\n\n        let bopts: browserResolve.AsyncOpts = {\n            extensions: this.config.bundlerOptions.resolve.extensions,\n            filename: requiringModule,\n            moduleDirectory: this.config.bundlerOptions.resolve.directories,\n            modules: this.shims\n        };\n\n        browserResolve(bundleItem.moduleName, bopts, (error, filename) => {\n            if (!error) {\n                bundleItem.filename = filename;\n                return onFilenameResolved();\n            }\n            bopts = {\n                basedir: this.config.karma.basePath,\n                extensions: this.config.bundlerOptions.resolve.extensions,\n                moduleDirectory: this.config.bundlerOptions.resolve.directories,\n                modules: this.shims\n            };\n\n            browserResolve(bundleItem.moduleName, bopts, (error2, filename2) => {\n                if (error2) {\n                    throw new Error(\"Unable to resolve module [\" +\n                        bundleItem.moduleName + \"] from [\" + requiringModule + \"]\" + os.EOL +\n                        JSON.stringify(bopts, undefined, 2) + os.EOL +\n                        error);\n                }\n                bundleItem.filename = filename2;\n                onFilenameResolved();\n            });\n        });\n    }\n\n    private resolveDependencies(bundleItem: BundleItem,\n                                buffer: BundleItem[],\n                                onDependenciesResolved: { (): void }) {\n\n        if (bundleItem.isScript() && this.dependencyWalker.hasRequire(bundleItem.source)) {\n            this.dependencyWalker.collectJavascriptDependencies(bundleItem, (moduleNames) => {\n                async.each(moduleNames, (moduleName, onModuleResolved) => {\n                    let dependency = new BundleItem(moduleName);\n                    this.resolveModule(bundleItem.filename, dependency, buffer, (resolved) => {\n                        if (resolved) {\n                            bundleItem.dependencies.push(resolved);\n                        }\n                        onModuleResolved();\n                    });\n                }, onDependenciesResolved);\n            });\n        }\n        else {\n            process.nextTick(() => {\n                onDependenciesResolved();\n            });\n        }\n    }\n}\n"]}