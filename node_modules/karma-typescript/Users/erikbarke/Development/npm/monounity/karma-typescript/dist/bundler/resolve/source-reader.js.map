{"version":3,"sources":["../src/bundler/resolve/source-reader.ts"],"names":[],"mappings":";;AAAA,6BAA+B;AAE/B,uBAAyB;AACzB,uBAAyB;AAQzB;IAEI,sBAAoB,MAAqB,EACrB,GAAW,EACX,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAe;QACrB,QAAG,GAAH,GAAG,CAAQ;QACX,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAE1C,2BAAI,GAAX,UAAY,UAAsB,EAAE,YAA0B;QAA9D,iBAYC;QAVG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAC,MAAc;YAErC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;YAC3B,UAAU,CAAC,GAAG,GAAG,KAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;YAE3D,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,EAAE;gBACzC,KAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;gBAC5C,YAAY,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+BAAQ,GAAhB,UAAiB,UAAsB,EAAE,YAAwC;QAE7E,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,YAAY,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,IAAI;gBACzC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,KAAK,CAAC;gBAChB,CAAC;gBACD,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAEO,iDAA0B,GAAlC,UAAmC,UAAsB;QACrD,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE;YACtB,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YAEtD,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAE/B,IAAG,CAAC;gBACA,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAClC,CAAC;YACD,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC/C,CAAC;YAED,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,GAAG,mBAAmB,GAAG,MAAM,GAAG,GAAG,CAAC;QACpE,CAAC;IACL,CAAC;IAEO,+CAAwB,GAAhC,UAAiC,UAAsB;QAEnD,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC;gBACH,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,QAAQ;gBACpB,IAAI,EAAE,SAAS;aAClB,CAAC;QACN,CAAC;QAED,IAAI,CAAC;YACD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACnF,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,sBAAsB,GAAG,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG;gBAC/C,KAAK,GAAG,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAG;gBACpC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG;gBACpF,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC;YACrF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;IACL,CAAC;IACL,mBAAC;AAAD,CA1EA,AA0EC,IAAA;AA1EY,oCAAY","file":"../../../../../../../../../dist/bundler/resolve/source-reader.js","sourcesContent":["import * as acorn from \"acorn\";\nimport * as ESTree from \"estree\";\nimport * as fs from \"fs\";\nimport * as os from \"os\";\n\nimport { Logger } from \"log4js\";\n\nimport { Configuration } from \"../../shared/configuration\";\nimport { BundleItem } from \"../bundle-item\";\nimport { Transformer } from \"../transformer\";\n\nexport class SourceReader {\n\n    constructor(private config: Configuration,\n                private log: Logger,\n                private transformer: Transformer) { }\n\n    public read(bundleItem: BundleItem, onSourceRead: { (): void }) {\n\n        this.readFile(bundleItem, (source: string) => {\n\n            bundleItem.source = source;\n            bundleItem.ast = this.createAbstractSyntaxTree(bundleItem);\n\n            this.transformer.applyTransforms(bundleItem, () => {\n                this.assertValidNonScriptSource(bundleItem);\n                onSourceRead();\n            });\n        });\n    }\n\n    private readFile(bundleItem: BundleItem, onSourceRead: { (source: string): void }) {\n\n        if (this.config.bundlerOptions.ignore.indexOf(bundleItem.moduleName) !== -1) {\n            onSourceRead(\"module.exports={};\");\n        }\n        else {\n            fs.readFile(bundleItem.filename, (error, data) => {\n                if (error) {\n                    throw error;\n                }\n                onSourceRead(data.toString());\n            });\n        }\n    }\n\n    private assertValidNonScriptSource(bundleItem: BundleItem): void {\n        if (!bundleItem.isScript() &&\n            !bundleItem.source.match(/^\\s*module\\.exports\\s*=/)) {\n\n            let source = bundleItem.source;\n\n            try{\n                JSON.parse(bundleItem.source);\n            }\n            catch (jsonError) {\n                source = JSON.stringify(bundleItem.source);\n            }\n\n            bundleItem.source = os.EOL + \"module.exports = \" + source + \";\";\n        }\n    }\n\n    private createAbstractSyntaxTree(bundleItem: BundleItem): ESTree.Program {\n\n        if (!bundleItem.isScript() ||\n            this.config.bundlerOptions.noParse.indexOf(bundleItem.moduleName) !== -1) {\n            return {\n                body: undefined,\n                sourceType: \"script\",\n                type: \"Program\"\n            };\n        }\n\n        try {\n            return acorn.parse(bundleItem.source, this.config.bundlerOptions.acornOptions);\n        }\n        catch (error) {\n            this.log.error(\"Error parsing code: \" + error.message + os.EOL +\n                           \"in \" + bundleItem.filename + os.EOL +\n                           \"at line \" + error.loc.line + \", column \" + error.loc.column + \":\" + os.EOL + os.EOL +\n                           \"... \" + bundleItem.source.slice(error.pos, error.pos + 50) + \" ...\");\n            process.exit(1);\n        }\n    }\n}\n"]}